---
- room: cell

  tests:
    - input: gt cell
      output: ^You are in what appears

    - input: look
      output: ^You are in what
      checks:
        - notes.state = start

    - input: task1
      output: Before you can move

    - input: x wardrobe
      output: ^The wardrobe is cheaper than

    #-------- task1 - getting dressed ------------------------
    - input: x notes
      output: every good boy dresses sharply

    - input: open wardrobe
      output: ^you see a bathrobe hanging inside
      checks:
        - robe.has = no

    - input: get robe
      output: You've put on the blue robe

    - input: inv
      output: [Robe]

    - input: look at bed
      output: a narrow metal bed is here
      checks:
        - robe.has = yes

    - input: examine bed
      output: a narrow metal bed is here

    - input: get sandals
      output: You slip on the blue sandals
      lines: 5
      checks:
        - sandals.has = yes
        - robe.has = yes
        - notes.state = task2

    #-------- task 2 jumping ------------------------
    - input: x notes
      output: exercise makes the man

    - input: get poster
      output: You turn the poster over to see the following

    - input: jump
      output: you'll have to say how many
      lines: 1

    - input: jump 18 times
      output: I think there are more legs than that in this room

    - input: jump 24 times
      output: You slip out of your blue sandals and perform

    #-------- task 3 - wash up ------------------------
    - input: x notes
      output: scrub away those mean, nasty germs

    - input: x wardrobe
      output: the wardrobe is empty
      lines: 1

    - input: x handle
      output: That's an odd looking wardrobe handle...
      lines: 1

    - input: shut wardrobe
      output: The doors creak as you close them
      lines: 4

    - input: x handle
      output: That's an odd looking wardrobe handle
      lines: 1

    - input: use sink
      output: the handle is missing
      lines: 2

    - input: use handle on sink
      output: you don't have a handle
      lines: 2

    - input: get handle
      output: you remove the odd looking handle from the wardrobe
      lines: 1

    - input: inv
      output: [Handle]
      lines: 3

    - input: use handle on sink
      output: You attach the handle to the faucet
      lines: 2
      checks:
        - sink.handle = yes

    - input: wash hands neck ears face
      output: You don't have any soap
      lines: 5

    - input: x bed
      output: soiled old pillow

    # before seeing it
    - input: get soap
      output: what soap?
      lines: 2
      checks:
        - soap.has = no
        # - soap.seen = no    # not initialized

    - input: x pillow
      output: There's a bar of soap inside the pillowcase
      checks:
        - soap.has = no
        - soap.seen = yes

    - input: get soap
      output: You take the soap out of the pillowcase
      lines: 2
      checks:
        - soap.has = yes

    - input: inv
      output: [Soap]

    - input: x pillow
      output: A soiled pillow case. Nothing inside.
      checks:
        - soap.has = yes

    - input: wash up
      output: Follow proper procedure, Jack.
      lines: 2

      # fixme - cannot support because extra 'IF' logic is needed
    - input: get soap
      output: what soap?

      # output: You already have the soap
    - input: wash hands neck ears face
      output: The third green light in the column

    #-------- task 4 - wash up ------------------------
    - input: x notes
      output: Can you matchhhhh the collllllor of my envyyyy

    - input: realclothes # button
      output: Suddenly, there is a deep crack

    # different ways to say it
    - input: termsandconds # button
      output: Can you matchhhhh the collllllor of my envyyyy
      lines: 1
    - input: ask about terms
      output: Can you matchhhhh the collllllor of my envyyyy
      lines: 1
    - input: ask about those terms and conditions
      output: Can you matchhhhh the collllllor of my envyyyy
      lines: 1
      checks:
        - notes.state = task4

    #-------- task 4 - wash up ------------------------

    - input: use sandals on window
      output: You remove the sandals and lift them to the window
