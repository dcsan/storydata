rooms:
  #--------------- cell --------------------

  - name: cell
    state: task1
    states:
      # should enter as task1 state
      - name: default
        short: "You are in what appears to be an inmate’s bedroom. \n"
        imageUrl: asylum/rooms/cell.jpg
        buttons:
          - look around | task1

      - name: task1
        imageUrl: asylum/rooms/cell.jpg
        short: "You are in what appears to be an inmate’s bedroom. \n
          You see a bed, a wardrobe, a desk, a sink, a window, a door, and a wall covered with images.
          "
        buttons:
          - look around | task1

      # repeat room description
      - name: task2
        imageUrl: asylum/rooms/cell-1.jpg
        short: "💡➖➖➖\n
          You are in what appears to be an inmate’s bedroom. \n
          You see a bed, a wardrobe, a desk, a sink, a window, a door, lights, and a wall covered with images.
          \n
          \nOne of the lights has come on.
          "
        hint: ":information_source:  you can check `notes` for the last instructions"

      - name: task3
        imageUrl: asylum/rooms/cell-2.jpg
        short: "💡💡➖➖\n
          two of the lights are on"
        hint: ":information_source:  you can check `notes` for the last instructions"

      - name: task4
        imageUrl: asylum/rooms/cell-dark.jpg
        short: "💡💡💡➖\n
          three of the lights are on"
        hint: ":information_source:  you can check `notes` for the last instructions"

      - name: task5
        imageUrl: asylum/rooms/cell-4.jpg
        short: "💡💡💡💡\n
          all of the lights are on"

    actions:

      # TODO - context sensitive hints
      - match: hint
        then:
          reply: "
            :information_source:  you can check `notes` for the last instructions \n
            type `help` for other commands
          "

      # notebook responds to extra actions
      - match: open notebook|read notebook
        then:
          after:
            - x notebook

      - match: ask Leo
        then:
          reply: Which Leo could they mean? You'd better take a `look` around the cell...

      - match: ask michael
        then:
          reply: Which Michael could they mean? You look around the cell...

      # general things
      - match: sleep
        then:
          reply: You're not tired.

      - match: make bed
        then:
          reply: You tidy up the bed. Little things matter.

      - match: repair sink
        then:
          reply: You can't magically fix the missing faucet

      - match: spit on soap
        then:
          reply: Better find way to turn the broken faucet

      - match: move pillow
        then:
          reply: It feels a bit lumpy.

      - match: eat soap
        then:
          reply: You take a bite but quickly decide better of it.

      # get soap
      - match: look mattress
        then:
          reply: There's nothing special about it, and nothing is hidden underneath.

      - match: use lights|turn lights on|turn on lights
        then:
          reply: They seem to be controlled from outside the room.

      - match: get dressed|get undressed
        then:
          reply: You'll need to find something else to wear.

      # when you click button examine in web
      - match: ":mag: view poster"
        always:
          reply: ":eyes:"
          # reply: "$username looked :mag: at the poster"

      - match: view poster
        always:
          reply: ":mag:"
          # reply: $username looked at the poster

      - match: get poster
        always:
          reply: "You turn the poster over to see the following scrawled in black Sharpie: \n
            \n> Four good boys in turns did wash
            \n> First was Hans the boy from Ansbach
            \n> Next was Nick with ruddy skin
            \n> While Piers did follow after him
            \n> The last was Fez a swarthy chum
            \n> He did the deed then all were done.
            "

      - match: ^(wash|wash face|wash face with soap|wash hands with soap)$
        if:
          all:
            - soap.has = yes
        then:
          after:
            - washalert
        else:
          reply: you don't have any soap

      - match: ^use soap$
        if:
          all:
            - soap.has = yes
        then:
          reply: Use soap to do what?
        else:
          reply: you don't have any soap

      - match: ^use soap on sink$
        if:
          all:
            - soap.has = yes
        then:
          reply: You use the soap, but cleaning the sink doesn't do much.

      - match: wash (yourself) with soap|wash with soap|use soap to wash|wash with soap
        then:
          after:
            - washalert

      - match: ^(wash hands|wash ears|wash neck|wash face|wash up)$
        then:
          after:
            - washalert

      # hands ears neck face shortcut
      - match: ^henf$
        then:
          after:
            - washalert

      - match: washalert
        then:
          reply: "
            The voice crackles out.
            \n> _'Follow proper procedure, Jack. Michael has told you how.'_
            "

      - match: ^use handle$
        if:
          all:
            - handle.has = yes
        then:
          reply: Use the handle where?
        else:
          reply: You aren't holding a handle.

      - match: use handle on sink
        if:
          all:
            - handle.has = yes
        then:
          imageUrl: asylum/shots/320/sink-handle.jpg
          reply: You attach the handle to the faucet.
          setProps:
            - sink.handle = yes
            - handle.state = sink
        else:
          reply: You don't have a handle.

      - match: sit .* (chair|desk)
        then:
          reply: You sit on the uncomfortable chair. Nothing happens aside from... discomfort.

      - match: enter bed
        then:
          reply: You're not tired.
      - match: enter wardrobe
        then:
          reply: This is not a C.S. Lewis novel...

      - match: open window|look out window
        then:
          reply: The bars prevent access to the window.

      - match: ^notes$
        then:
          before:
            - x notebook

      - match: open desk
        always:
          reply: You look in the desk drawer and find a notebook.
          setProps:
            - desk.state = open

      - match: close desk
        always:
          reply: You close the desk drawer.
          setProps:
            - desk.state = shut
          after:
            - x desk

      - match: search desk
        always:
          reply: You don't find anything interesting.
          setProps:
            - desk.state = open
          after:
            - x desk

      # ------  task: dress ---------
      - match: open wardrobe
        always:
          reply: You open the wardrobe.
        if:
          all:
            - robe.has = yes
        then:
          setProps:
            - wardrobe.state = openEmpty
            - wardrobe.open = yes
          after:
            - x wardrobe
        else:
          setProps:
            - wardrobe.open = yes
            - wardrobe.state = openRobe
          after:
            - x wardrobe

      # close and retain state based on if youer wearing clothes
      - match: close wardrobe
        always:
          reply: The doors creak as you close them.
        if:
          all:
            - handle.has = yes
        then:
          setProps:
            - wardrobe.state = closedOneHandle
          after:
            - x wardrobe
        else:
          setProps:
            - wardrobe.state = closed
          after:
            - x wardrobe

      - match: get handle
        if:
          all:
            - handle.has = no
        then:
          reply: You remove the odd looking handle from the wardrobe.
          imageUrl: shared/anims/blue-hand-50.gif
          take:
            - handle
          setProps:
            - handle.has = yes
            - wardrobe.state = closedOneHandle
        else:
          reply: You already have the handle

      # need to add code to alllow multiple ifs / branches
      - match: get robe|wear robe
        if:
          all:
            - wardrobe.open = yes
            - robe.has = no
        then:
          reply: ":star: You put on the blue robe."
          # imageUrl: shared/anims/blue-hand-50.gif
          take:
            - robe
          setProps:
            - robe.has = yes
            - wardrobe.state = openEmpty
          after:
            - checkTask1
        else:
          reply: You can't see a robe. # could be either shut/has

      - match: get sandals|wear sandals
        then:
          reply: ":star: You slip on the blue sandals"
          take:
            - sandals
          setProps:
            - sandals.has = yes
            - bed.state = nosandals
          after:
            - checkTask1

      - match: drop sandals
        then:
          reply: You put the sandals back under the bed.
          # not implemented in engine yet
          drop:
            - sandals
          setProps:
            - sandals.has = no
            - bed.state = default
          after:
            - checkTask1

      - match: checkTask1
        if:
          all:
            - robe.has = yes
            - sandals.has = yes
        then:
          reply: You're fully dressed now.
          imageUrl: shared/anims/blue-hand-50.gif
          after:
            - task2
        else:
          imageUrl: asylum/items/120/tannoy.png
          reply: "The tannoy blurts out
            \n>_'You're halfway there, Jack.'_
            "

      # task 1 - get dressed
      - match: ^(task1|look room|look around)$
        if:
          all:
            - notebook.state = start
        then:
          imageUrl: asylum/items/120/tannoy.png
          reply: "A voice crackles over a hidden speaker in the room.
            \n
            \n> _“To proceed to breakfast, please follow your morning routine.
            > Remember, every good boy dresses sharply.”_
            "
          hint: ":information_source:  you can check `notes` for the last instructions"
          setProps:
            - notebook.state = task1
            - room.state = task1
            - lights.state = task1
        else:
          reply: You're still in the cell
          hint: ":information_source:  you can check `notes` for the last instructions or `hint` if you're stuck"

      # task 2 - do exercise
      - match: task2
        then:
          reply: "💡➖➖➖\n
          The bottom bulb in a column of four has come on, now glowing a bright green above the others.
            The same voice crackles over the speaker.
            \n> _“That’s a good boy, Jack. Now remember, exercise makes the man. Just as many times as there are legs in the room.”_"
          hint: ":information_source:  you can check `notes` for the last instructions"
          setProps:
            - notebook.state = task2
            - room.state = task2
            - lights.state = task2

      # task #3 - get washed
      - match: task3
        then:
          reply: "💡💡➖➖\n
          The second in the column of four green lightbulbs lights up and theinvisible speaker crackles.
            \n> _“Well done, young Jack. You’re fit as a fiddle. And now it’s time for all good boys to scrub away those mean, nasty germs. Let’s not be careless, now. Follow proper procedure.”_
            "
          hint: ":information_source:  you can check `notes` for the last instructions"
          setProps:
            - notebook.state = task3
            - room.state = task3
            - lights.state = task3

      # task #4 - color puzzle
      - match: task4
        then:
          reply: "💡💡💡➖\n
            The third green light in the column above the sink turns on and the voice is encouraging this time.
            \n> _“Jack, my boy, you’re a wonderful lad.
            Limber and loose and clean as a goose. And dressed up so nicely to boot!”_"
          buttons:
            - ask where my real clothes are | realclothes
          setProps:
            - notebook.state = task4
            - room.state = task4
            - lights.state = task4

      - match: ask where my real clothes are|real clothes|cracked|realclothes|ask about clothes|ask clothes|ask where
        then:
          imageUrl: asylum/rooms/cell-dark.jpg
          reply: Suddenly, there is a deep crack, and all the lights drop out in the facility.
            All that remains is the artificial yellow glow from outside your window
            and the three illuminated green lightbulbs above the sink.
          buttons:
            - ask about those terms and conditions | termsandconds

      - match: termsandconds|ask about [.*|] terms|ask about terms
        then:
          reply: "
            \n>_“Jackkkk…”_
            The voice is faint and eerie, like a record being played at the wrong speed.
            "
          after:
            - greenMessage

      - match: greenMessage
        then:
          reply: "
            \n>
            _“I’mmm envioussss of youuu Jackkk. Can you matchhhhh the collllllor of my envyyyy, Jackkk?”_
            "

      # task 4 win
      - match: use sandals on window|use robe on window|use sandals with window|use robe with window|task5
        if:
          all:
            - notebook.state = task4
        then:
          reply: "💡💡💡💡\n
            You cover the window and the blue material is transformed to green by the yellow light.
            The fourth and final green lightbulb above the sink blinks on, followed by a resounding crack.
            The lights of the facility pulse as they come on once again.\n
            As you put the sandals on once again, you hear a loud click from the bedroom door."
          imageUrl: shared/anims/blue-hand-50.gif
          setProps:
            - door.state = open
            - room.state = task5
            - notebook.state = task5
        else:
          reply: Nothing special happens.

      # task #5
      - match: exit room|open door|use door|go out|go through door|exit|leave|back|run
        if:
          all:
            - robe.has = yes
            - door.state = open
        then:
          reply: You step into the hallway, pleased with your accomplishment.
          goto: epilogue
        else:
          reply: The door won't open.

      # door
      - match: open sesame
        then:
          reply: You shout "sesame" to the room.
            Slowly, the door opens.
          setProps:
            - door.state = open

      - match: find soap
        then:
          reply: Hmm, where did  you put the soap?

      # # exit via door
      # - match:
      #   always:
      #     reply: You try the door.
      #   if:
      #     all:
      #       - door.state = locked
      #   then:
      #     reply: It's locked.
      #   else:
      #     reply: It opens.
      #     goto: epilogue

      - match: exercise
        then:
          reply: What kind of exercise? Maybe Leo would know.

      - match: pushups|push ups|squat
        then:
          reply: That's not the kind of exercise we do here! Ask Leo.

      # has to come before next one since that matches just 'jacks'
      - match: 24 jumping jacks|24 jacks|24 jumping jacks|jump 24 times|jump 24
        if:
          all:
            - tasks.state = task2
        then:
          imageUrl: shared/anims/blue-hand-50.gif
          reply: You slip out of your blue sandals and perform 24 jumping jacks in your socks.
            You can’t remember doing these since childhood. It’s rather fun, actually.
          after:
            - task3
        else:
          reply: "
            \n>_“Let's not get ahead of ourselves, now, Jack. Follow instructions, lad.”_
            "
          hint: ":information_source: check your `notes` for what to do next"

      - match: "(jump|jumping|jumping jacks|jacks) \\d{2}"
        then:
          reply: Jumping jacks are what we do. But how many legs are in the room? Did you check with Leo?

      - match: "\\d+ (jump|jumping|jumping jacks|jacks)"
        then:
          reply: Jumping jacks are what we do. But how many legs are in the room? Did you check with Leo?

      - match: jump|jumping jacks|jacks
        then:
          reply: You'll have to say how many times

      - match: look pillow
        if:
          all:
            - soap.has = yes
        then:
          reply: A soiled pillow case. Nothing inside.
        else:
          reply: ":star: there's a bar of soap inside the pillowcase"
          setProps:
            - soap.seen = yes

      # soap
      # still has the problem when you have the soap
      # as we can't do multiple IFs/switch statement
      - match: get soap
        if:
          all:
            - soap.has = no
            - soap.seen = yes
        then:
          reply: ":star: You take the soap out of the pillowcase"
          take:
            - soap
          setProps:
            - pillow.state = noSoap
        else:
          reply: what soap?

      - match: drop soap
        always:
          setProps:
            - pillow.state = hasSoap
            - soap.has = no
          drop:
            - soap

      # right answer! moves to task4
      - match: wash hands neck ears face
        then:
          callJS: checkWashing

      - match: look under bed
        if:
          all:
            - sandals.has = yes
        then:
          reply: It's a bit dirty down there, but you don't see anything particular interesting.
        else:
          reply: You see a pair of blue plastic sandals.

      - match: turn handle|turn faucet|turn water on|turn tap
        if:
          all:
            - sink.handle = yes
        then:
          reply: Water begins trickling out. Now might be a good time to wash up...
        else:
          reply: The handle looks out of place on the wardrobe.

      - match: use handle on sink|attach handle to sink|use handle with sink
        if:
          all:
            - handle.has = yes
        then:
          setProps:
            - sink.handle = yes
            - sink.state = handle
            - handle.state = sink
          reply: ":star: You attach the handle to the sink faucet. It seems to fit perfectly."
          # imageUrl: shared/anims/blue-hand-50.gif
        else:
          reply: You don't have a handle.

      - match: use sink|turn faucet|turn on sink|turn sink on|turn handle|use sink
        if:
          all:
            - sink.handle = yes
        then:
          reply: You turn the handle and water starts running out. You could clean up here!
        else:
          reply: You can't turn the broken faucet.

    items:
      - name: door
        state: locked
        states:
          - name: locked
            short: The door is tightly locked.
          - name: open
            short: The door has opened. Time to make your escape?

      - name: handle
        called: faucet|tap
        state: wardrobe
        canTake: true
        hidden: true
        states:
          - name: wardrobe
            short: That's an odd looking wardrobe handle...
          - name: holding
            short: One of the handles is missing from the wardrobe door.
            imageUrl: asylum/items/120/handle.png
          - name: sink
            short: The handle fits perfectly on the sink

      - name: pillow
        called: pillowcase|pillow case
        state: hasSoap
        hidden: true
        states:
          - name: hasSoap
            short: There's a bar of soap inside the pillowcase.
          - name: noSoap
            short: It's just an ordinary, head-stained pillow.

      - name: soap
        called: soap|bar of soap|soapbar
        canTake: true
        unique: true
        hidden: true
        # props:
        #   - seen: no
        states:
          - name: default
            short: It's an ordinary bar of soap.
            imageUrl: asylum/items/120/soap.png

      #-------- wardrobe
      - name: wardrobe
        called: wardrobe|cupboard|closet|wr
        state: closed
        canTake: false
        states:
          - name: closed
            imageUrl: asylum/items/slice/wardrobe-shut.jpg
            short: A free-standing wooden wardrobe is against one wall.
            long: The wardrobe is cheaper than the one you remember from your college dorm.
              It has two narrow doors with rounded handles that look like flower petals.
          - name: closedOneHandle
            imageUrl: asylum/items/slice/wardrobe-onehandle.jpg
            short: A free-standing wooden wardrobe is against one wall. One handle is missing
          # depends on clothes.has which state to show
          - name: openRobe
            imageUrl: asylum/items/slice/wardrobe-robe.jpg
            short: You see a bathrobe hanging inside.
          - name: openEmpty
            imageUrl: asylum/items/slice/wardrobe-empty.jpg
            short: The wardrobe is empty.

      - name: robe
        called: gown|robe|dressing gown|bathrobe
        canTake: true
        onTake: you put on the robe
        hidden: true
        states:
          - name: default
            short: It's a cheap, blue cotton bathrobe.

      - name: notebook
        called: notebook|note|book|memo|tasks|nb|notes|memo|notepad
        canTake: true
        state: start
        states:
          - name: start
            short: The notebook is blank until you get some instructions. Have a look around!
          - name: task1
            short: "*[Task 1/4]* The voice had said _“To proceed to breakfast, please follow your morning routine.
              Remember, every good boy dresses sharply.”_ "
          - name: task2
            short: "*[Task 2/4]* The voice said
              _“That’s a good boy, Jack. Now remember, exercise makes the man.
              Just as many times as there are legs in the room”_
              \n\n
              Remember what exercise is best, Jack? If you don’t know yourself, ask Leo
              "
          - name: task3
            short: "*[Task 3/4]* The voice had said
              _“And now it’s time for all good boys to scrub away those mean, nasty germs.”_
              \n\n
              Are you dreaming about soap, Jack? Maybe a fairy can help you"
          - name: task4
            short: "[Task 4/4]
              _“I’mmm envioussss of youuu Jackkk. Can you matchhhhh the collllllor of my envyyyy, Jackkk?”_
              "
          - name: task5
            short: "Now you just need to get out of here..."

      - name: sandals
        called: sandals|shoes|slippers
        onTake: You slip on the blue sandals
        hidden: true
        canTake: true
        states:
          - name: default
            short: They are translucent blue, and made of plastic.

      - name: bed
        called: under bed
        states:
          - name: default
            imageUrl: asylum/shots/slice/bed-slippers.jpg
            short: A narrow metal bed is here with a soiled old pillow.
          - name: nosandals
            imageUrl: asylum/shots/320/bed.jpg
            short: A narrow metal bed is here with a soiled old pillow.

      - name: desk
        called: drawer|desk|squat desk|table
        states:
          - name: default
            imageUrl: asylum/shots/320/desk-shut.jpg
            short: A squat desk with chair sits beside the wardrobe.
          - name: open
            imageUrl: asylum/shots/320/desk-open.jpg
            short: The desk drawer is open.

      - name: chair
        states:
          - name: default
            short: It's an uncomfortable looking chair.

      - name: sink
        called: faucet
        states:
          - name: default
            imageUrl: asylum/shots/320/sink.jpg
            short: The handle is missing.
          - name: handle
            imageUrl: asylum/shots/320/sink-handle.jpg
            short: Now you can use the sink.

      - name: lights
        called: wall lights
        states:
          - name: default
            short: A vertical row of small lightbulbs is built into the wall above the sink
          - name: task1
            short: 💡➖➖➖
              one of the lights has come on
          - name: task2
            short: 💡💡➖➖
              two of the lights are lit up
          - name: task3
            short: 💡💡💡➖
              three of the four lights are lit
          - name: task4
            short: 💡💡💡💡
              all of the lights are lit up. It seems you've completed the steps required.

      - name: wall
        called: wall
        states:
          - name: default
            short: Some posters are on the wall.
            long: You see a drawing, a poster of an album cover, and a photo.
            imageUrl: asylum/shots/320/poster-wall.jpg

      - name: drawing
        called: man poster|vitruvian|davinci|da vinci|drawing|leonardo
        hidden: true
        canTake: true
        states:
          - name: default
            imageUrl: asylum/items/240/drawing.jpg
            long: It’s a reproduction of DaVinci’s classic drawing, “Vitruvian Man,” except the figure looks a lot like you at the moment.

      - name: photo
        called: face photo|high-school|photo|school photo|pic|picture
        canTake: true
        hidden: true
        states:
          - name: default
            imageUrl: asylum/items/240/school-photo.jpg
            long: It’s you, from your senior year in high school, complete with forehead acne and love goggles. How did they manage to make a copy of this? Unnerving.

      - name: poster
        called: jackson|high-school|photo|poster|album|album cover|jackson photo
        hidden: true
        canTake: true
        states:
          - name: default
            imageUrl: asylum/items/240/album.jpg
            webUrl: /items/album
            webLinkText: ":mag:  view poster details... :earth_americas:"
            long: You remember this album cover from childhood.
              However, you don’t remember Michael holding a bar of soap in it.

      - name: window
        states:
          - name: default
            imageUrl: asylum/shots/320/window.jpg
            short: A rectangular window with bars is recessed into the far wall. A door leads out.
            long: The window is frosted and protected by metal bars from your side.
              Upon closer inspection, you notice that the unnatural yellow light from without is pulsing slightly, with the faint electrical buzz of artificial lighting.
